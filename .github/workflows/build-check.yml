name: Build check
#
# Branch (Ignoring) [m   ain]
# - Build app assets
# |-- Lint project
# |-- Check i18n string
# |-- Run Tests
#

on:
  push:
    branches:
      - '**'
      - '!main'
  workflow_dispatch:


jobs:
  setup:
    name: Setup code and environment needed for linting, translations and tests
    runs-on: self-hosted
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Set up Node environment
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Install node modules if cache not present
        run: yarn install --immutable
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  lint:
    runs-on: self-hosted
    needs: setup
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - run: mkdir -p ~/reports
      - name: Lint
        run: yarn lint:ci
      - name: Prettier
        run: yarn prettier
      - name: Upload linting report
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: ~/reports/eslint.xml

  i18n:
    runs-on: self-hosted
    needs: setup
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Check Swedish translations
        run: yarn test:i18n 'en-EN'

  test:
    runs-on: macos-latest
    needs: setup
    timeout-minutes: 20
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}
      - name: Run tests with JUnit as reporter
        run: yarn test:coverage
        env:
          JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
      - name: Upload Jest JUnit test results
        uses: actions/upload-artifact@v3
        with:
          name: jest-test-results
          path: ./reports/junit/junit.xml
